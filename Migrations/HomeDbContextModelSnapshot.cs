// <auto-generated />
using System;
using HomeWorkEntity.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeWorkEntity.Migrations
{
    [DbContext(typeof(HomeDbContext))]
    partial class HomeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArchitectEngineer", b =>
                {
                    b.Property<int>("ArchitectsId")
                        .HasColumnType("int");

                    b.Property<int>("EngineersId")
                        .HasColumnType("int");

                    b.HasKey("ArchitectsId", "EngineersId");

                    b.HasIndex("EngineersId");

                    b.ToTable("EngineersArchitects");
                });

            modelBuilder.Entity("HomeWorkEntity.Models.Architect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Level")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Architects");
                });

            modelBuilder.Entity("HomeWorkEntity.Models.ArchitectProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("ArchitectRecordId")
                        .HasColumnType("int");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArchitectRecordId")
                        .IsUnique();

                    b.ToTable("ArchitectProfiles");
                });

            modelBuilder.Entity("HomeWorkEntity.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Build")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("BuildingBuild");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RenamedCompany");
                });

            modelBuilder.Entity("HomeWorkEntity.Models.Engineer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Engineers");
                });

            modelBuilder.Entity("ArchitectEngineer", b =>
                {
                    b.HasOne("HomeWorkEntity.Models.Architect", null)
                        .WithMany()
                        .HasForeignKey("ArchitectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeWorkEntity.Models.Engineer", null)
                        .WithMany()
                        .HasForeignKey("EngineersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeWorkEntity.Models.Architect", b =>
                {
                    b.HasOne("HomeWorkEntity.Models.Company", "Company")
                        .WithMany("Architects")
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HomeWorkEntity.Models.ArchitectProfile", b =>
                {
                    b.HasOne("HomeWorkEntity.Models.Architect", "ArchitectRecord")
                        .WithOne("Profile")
                        .HasForeignKey("HomeWorkEntity.Models.ArchitectProfile", "ArchitectRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArchitectRecord");
                });

            modelBuilder.Entity("HomeWorkEntity.Models.Architect", b =>
                {
                    b.Navigation("Profile");
                });

            modelBuilder.Entity("HomeWorkEntity.Models.Company", b =>
                {
                    b.Navigation("Architects");
                });
#pragma warning restore 612, 618
        }
    }
}
